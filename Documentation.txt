---Explaination and Flow of the Application---

In package.json the 'main' is set to server.js and 
'start' key in 'the scripts' is also set to 'node ./server.js' by which
when typed 'npm start' in terminal the server starts.

so the flow begins with server.js

> server.js --> configs (server.config.js)
it gets the port from server.config which got it from '.env' file

> server.js --> models (index.js)
it gets the db object which it uses to be in sync with MySql Database

Different Application's '.route' files are registered along with the express 'app',
those '.route' files contain the endpoints

Depending upon the url ,corresponding endpoint is hit
lets say 'localhost:8080/categories'

In '.route file' of categories 
> category.route.js --> validators(category_name_validator)

Depending upon the url and the method the corresponding controller function is called
> category.route.js --> controllers(category.controller)

These controllers only handle req,res and trigger the corresponding function of category.service
which interacts with Database
> category.controller --> services(category.service)
> category.service --> MySql Database

Response
> MySql Database --> category.service --> category.controller --> User

                        ----------


---User Registration(SignUp) and SignIn---

>User passwords are first hashed(encrypted) using 'bcrypt' Lib, then registered

>While Signing In, If the credentials are correct User is provided a 'Jwt token'
which will validate the authorization of the User,
As the encoded token will contain roles(privileges) of the User 


